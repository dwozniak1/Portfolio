using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;
using System.Threading;
///Name: Delaney Wozniak
///Class: INFO 2200
///Section: X01
///Professor: Sharp
///Date: 04/04/2024
///Project #: Participation 6
///By submitting this assignment, I declare that the source code contained in this assignment was written solely by me, unless specifically provided in the assignment. 
///I attest that no part of this assignment, in whole or in part, was generated by Generative Artificial Intelligence (e.g., ChatGPT, Bard, Copilot, etc.) nor obtained from a paid solution service (e.g., Chegg, Course Hero, Bartleby, etc.). 
///I understand that copying any source code, in whole or in part, constitutes cheating, and that I will receive a zero on this project if I am found in violation of this policy.

namespace ServerApplication
{
    public class SyncronousSocketListener
    {
        const int PORT = 11000; //set port number
        const string IP_ADDRESS = "127.0.0.1"; //set ip addres
        const string JOKE = "JOKE"; //constant string for joke
        const string CONSPIRACY = "CONSPIRACY"; //constant string for conspiracy
        string[] jokes; //create array for jokes
        string[] conspiracies; //create array for conspiracies
        const string JOKE_FILE = "jokes.txt"; //constant string for jokes.txt file
        const string CONSP_FILE = "conspiracies.txt"; //constant string for conspiracies.txt file
        TcpListener tcpListener; //

        //constructor method to load jokes
        public SyncronousSocketListener()
        {
            try
            {
                jokes = File.ReadAllLines(JOKE_FILE); //read all lines of joke file
                conspiracies = File.ReadAllLines(CONSP_FILE); //read all lines of conspiracy file
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message); //display ex error message
            }
        }

        public void StartListening()
        {
            IPAddress iPAddress = IPAddress.Parse(IP_ADDRESS); //pull in ip address as normal ip addres
            tcpListener = new TcpListener(iPAddress, PORT); //new tcpListener on ip addressa and port number
            tcpListener.Start(); //start tcpListener
            Thread thread = new Thread(new ThreadStart(ProcessSocket)); //process stream on new thread
            thread.Start(); //start listening
        }
        //method listening on network stream
        public void ProcessSocket()
        {
            while (true)
            {
                try
                {
                    Socket socket = tcpListener.AcceptSocket(); //call tcpListener socket
                    NetworkStream ns = new NetworkStream(socket); //new network stream
                    StreamReader reader = new StreamReader(ns); //new stream reader on network stream
                    StreamWriter writer = new StreamWriter(ns); //new stream writer on network stream

                    writer.AutoFlush = true; //make sure no packets are left over

                    string clientinput = reader.ReadLine(); //get client input
                    Console.WriteLine($"Recieved from client:{ clientinput}"); //display message with client input

                    Random rand = new Random(); //random method
                    if(clientinput.ToUpper() == JOKE)
                    {
                        string joke = jokes[rand.Next(jokes.Length)]; //get random joke
                        Console.WriteLine(joke); //write joke to console
                        writer.WriteLine(joke); //write joke back to client
                    }
                    else if (clientinput.ToUpper() == CONSPIRACY)
                    {
                        string consp = conspiracies[rand.Next(conspiracies.Length)];
                        Console.WriteLine(consp); //write conspiracy to console
                        writer.WriteLine(consp); // write joke back to client
                    }
                    else
                    {
                        writer.WriteLine($"Could not do anything with:{clientinput}"); //display error message
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message); //display ex error message
                }
            }
        }
    }
}
