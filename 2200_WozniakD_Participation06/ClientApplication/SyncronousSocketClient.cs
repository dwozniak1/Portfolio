using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Sockets;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.IO;
///Name: Delaney Wozniak
///Class: INFO 2200
///Section: X01
///Professor: Sharp
///Date: 04/04/2024
///Project #: Participation 6
///By submitting this assignment, I declare that the source code contained in this assignment was written solely by me, unless specifically provided in the assignment. 
///I attest that no part of this assignment, in whole or in part, was generated by Generative Artificial Intelligence (e.g., ChatGPT, Bard, Copilot, etc.) nor obtained from a paid solution service (e.g., Chegg, Course Hero, Bartleby, etc.). 
///I understand that copying any source code, in whole or in part, constitutes cheating, and that I will receive a zero on this project if I am found in violation of this policy.

namespace ClientApplication
{
    public class SyncronousSocketClient
    {
        const int SERVER_PORT = 11000; //set port
        const string IP_ADDRESS = "127.0.0.1"; //set ip address

        public string ContactServer(string request)
        {
            string responseString = "";
            try
            {
                TcpClient tcpClient = new TcpClient();
                tcpClient.Connect(IPAddress.Parse(IP_ADDRESS), SERVER_PORT); //run tcpClient on ip addressa and port
                NetworkStream networkStream = tcpClient.GetStream(); //get network stream

                StreamReader streamReader = new StreamReader(networkStream); //new StreamReader on network stream
                StreamWriter streamWriter = new StreamWriter(networkStream); //new StreamWriter on network stream

                streamWriter.AutoFlush = true; //ensure no packets left over
                streamWriter.WriteLine(request); //write request to console
                responseString = streamReader.ReadLine(); //get response
                networkStream.Close(); //stop network stream
                tcpClient.Close(); //stop tcpClient
            }
            catch (Exception ex)
            {
                responseString = ex.Message; //display ex error message
            }
            return responseString; //display response
        }
    }

}
