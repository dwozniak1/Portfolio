using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
///Name: Delaney Wozniak
///Class: INFO 2200
///Section: X01
///Professor: Sharp
///Date: 03/26/2024
///Project #: Participation 5
///By submitting this assignment, I declare that the source code contained in this assignment was written solely by me, unless specifically provided in the assignment. 
///I attest that no part of this assignment, in whole or in part, was generated by Generative Artificial Intelligence (e.g., ChatGPT, Bard, Copilot, etc.) nor obtained from a paid solution service (e.g., Chegg, Course Hero, Bartleby, etc.). 
///I understand that copying any source code, in whole or in part, constitutes cheating, and that I will receive a zero on this project if I am found in violation of this policy.

namespace _2200_WozniakD_Participation05
{
    public partial class ProductSearchForm : Form
    {
        ProductEntityDb db = new ProductEntityDb(); //connect to db

        public ProductSearchForm()
        {
            InitializeComponent();
        }
        /// <summary>
        /// Click event for add new product button
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void BtnAddNewProd_Click(object sender, EventArgs e)
        {
            AddProductForm addProductForm = new AddProductForm(); 
            addProductForm.ShowDialog(); // display add product form
            //update the table dgv
            List<Product> products = (from prod in db.Products
                                      select prod).ToList();
            //List<Product> linqMethod = db.Products.ToList();

            DgvProducts.DataSource = products; //display all products from data source in data grid view
            CbProdId.Items.Clear(); //clear product id combobox
            CbProdId.Items.AddRange(products.Select(prod => prod.Product_Number).ToArray()); //add product numbers to array
        }
        /// <summary>
        /// Click event for delete button
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void BtnDeleteProd_Click(object sender, EventArgs e)
        {
            Product findProd = db.Products.FirstOrDefault(prod => prod.Product_Number == CbProdId.SelectedItem.ToString()); //find the corresponding product to the product id given by the user in db
            if (findProd != null) 
            {
                db.Products.Remove(findProd); //if product is found, remove it from the database
                db.SaveChanges(); //update db
                MessageBox.Show($"{findProd.Product_Number} was deleted from the database."); //display message if product was found and removed
                List<Product> products = (from prod in db.Products
                                          select prod).ToList();
                //List<Products> linqMethod = db.Products.ToList();

                DgvProducts.DataSource = products; //display all products from data source in data grid view
                CbProdId.Items.Clear(); //clear product id combobox
                CbProdId.Items.AddRange(products.Select(prod => prod.Product_Number).ToArray()); //add product id's back into array
            }
            else
            {
                MessageBox.Show($"Could not find {findProd.Product_Number} in the database"); //if product was not found diplay message
            }
        }
        /// <summary>
        /// Click event for product description text box
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void TxtBoxProductDesc_TextChanged(object sender, EventArgs e)
        {
            List<Product> products = (from prod in db.Products
                                      where prod.Description.Contains(TxtBoxProductDesc.Text) 
                                      select prod).ToList(); //find all products that match user's description and put them in a list
            //List<Product> linqMethod = db.Products.Where(prod => prod.Description.Contains(TxtBoxProductDesc.Text)).ToList(); //linq statement to find products matching users description and putting it in a list
            DgvProducts.DataSource = products; //display list
        }/// <summary>
        /// Click event for product search form
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void ProductSearchForm_Load(object sender, EventArgs e)
        {
            List<Product> products = (from prod in db.Products
                                      select prod).ToList(); //find all products and put them in a list
            //List<Product> linqMethod = db.Products.ToList();
            DgvProducts.DataSource = products; //populate table with products in database
            CbProdId.Items.AddRange(products.Select(prod => prod.Product_Number).ToArray()); //fill combox box with product id's
        }
    }
}
